/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the LiveRequest class.
 * @constructor
 * Properties of the request.
 *
 * @member {object} headers Headers of the request.
 * @member {string} method Http verb of the request. Possible values include:
 * 'GET', 'PUT', 'PATCH', 'POST', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE'
 * @member {string} url Url of the request.
 * @member {object} [body] Parsed body of the request as a JSON.
 */
export interface LiveRequest {
  headers: { [propertyName: string]: string };
  method: string;
  url: string;
  body?: any;
}

/**
 * @class
 * Initializes a new instance of the LiveResponse class.
 * @constructor
 * Properties of the response.
 *
 * @member {string} statusCode The Response status code.
 * @member {object} headers Headers of the response.
 * @member {object} [body] Body of the response.
 * @member {string} [encoding] The encoding of the response body when the body
 * is a buffer.
 */
export interface LiveResponse {
  statusCode: string;
  headers: { [propertyName: string]: string };
  body?: any;
  encoding?: string;
}

/**
 * @class
 * Initializes a new instance of the RequestResponse class.
 * @constructor
 * Describes the live request and response to be validated.
 *
 * @member {object} liveRequest Schema for the live request to be validated
 * @member {object} [liveRequest.headers] Headers of the request.
 * @member {string} [liveRequest.method] Http verb of the request. Possible
 * values include: 'GET', 'PUT', 'PATCH', 'POST', 'DELETE', 'HEAD', 'OPTIONS',
 * 'TRACE'
 * @member {string} [liveRequest.url] Url of the request.
 * @member {object} [liveRequest.body] Parsed body of the request as a JSON.
 * @member {object} liveResponse Schema for the live response to be validated
 * @member {string} [liveResponse.statusCode] The Response status code.
 * @member {object} [liveResponse.headers] Headers of the response.
 * @member {object} [liveResponse.body] Body of the response.
 * @member {string} [liveResponse.encoding] The encoding of the response body
 * when the body is a buffer.
 */
export interface RequestResponse {
  liveRequest: LiveRequest;
  liveResponse: LiveResponse;
}

/**
 * @class
 * Initializes a new instance of the OperationInfo class.
 * @constructor
 * Describes the operation against which the live request and response
 * validation happened.
 *
 * @member {string} operationId The id of the operation against which
 * validation happened. This will help find the problematic information in the
 * spec and will be useful in preparing report.
 * @member {string} apiVersion Describes the api-version of the openapi
 * specification. This will help find the openapi spec corresponding to that
 * api-version and will be useful in preparing report.
 */
export interface OperationInfo {
  operationId: string;
  apiVersion: string;
}

/**
 * @class
 * Initializes a new instance of the ValidationModel class.
 * @constructor
 * Properties of the validation model.
 *
 * @member {string} repoUrl The repo url from where to construct the swagger
 * model.
 * @member {string} branch The branch of the repo from where to construct the
 * swagger model.
 * @member {string} resourceProvider The resource provider for whom to
 * construct the swagger model.
 * @member {string} apiVersion The api version of the resource provider to
 * construct the swagger model.
 * @member {number} duration The duration in seconds for which to run
 * validations against the model. The results of the validation will be
 * available only after this duration has passed.
 */
export interface ValidationModel {
  repoUrl: string;
  branch: string;
  resourceProvider: string;
  apiVersion: string;
  duration: number;
}

/**
 * @class
 * Initializes a new instance of the ValidationModelCreateResponse class.
 * @constructor
 * Response to a Create Validation Model request.
 *
 * @member {string} [validationId] The id of the validation model created.
 */
export interface ValidationModelCreateResponse {
  readonly validationId?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationValidationResult class.
 * @constructor
 * The validation results of a specific operation of the swagger model.
 *
 * @member {string} [validationId] The id of the swagger model to which the
 * results belong.
 * @member {string} [operationId] The operationId to which the results belong.
 * @member {string} [resourceProvider] The resource provider for which the
 * swagger model was built.
 * @member {string} [apiVersion] The API version of the resource provider for
 * which the swagger model was built.
 * @member {string} [modelSourceRepo] The source repo of the swagger model.
 * @member {string} [modelSourceBranch] The source branch of the swagger model.
 * @member {number} [operations] The number of operations (Request-Response
 * pair) that were validated.
 * @member {number} [successOperations] The number of operations
 * (Request-Response pair) successfully validated.
 * @member {number} [successRate] The percent of successful operations
 * validated.
 * @member {number} [successRequests] The number of requests validated
 * successfully.
 * @member {number} [successResponses] The number of responses validated
 * successfully.
 * @member {string} [validationEndtime] The datetime when the validation
 * completed.
 */
export interface OperationValidationResult {
  readonly validationId?: string;
  readonly operationId?: string;
  readonly resourceProvider?: string;
  readonly apiVersion?: string;
  readonly modelSourceRepo?: string;
  readonly modelSourceBranch?: string;
  readonly operations?: number;
  readonly successOperations?: number;
  readonly successRate?: number;
  readonly successRequests?: number;
  readonly successResponses?: number;
  readonly validationEndtime?: string;
}
