/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The validation results of a specific operation of the swagger model.
 *
 */
class OperationValidationResult {
  /**
   * Create a OperationValidationResult.
   * @member {string} [validationId] The id of the swagger model to which the
   * results belong.
   * @member {string} [operationId] The operationId to which the results
   * belong.
   * @member {string} [resourceProvider] The resource provider for which the
   * swagger model was built.
   * @member {string} [apiVersion] The API version of the resource provider for
   * which the swagger model was built.
   * @member {string} [modelSourceRepo] The source repo of the swagger model.
   * @member {string} [modelSourceBranch] The source branch of the swagger
   * model.
   * @member {number} [operations] The number of operations (Request-Response
   * pair) that were validated.
   * @member {number} [successOperations] The number of operations
   * (Request-Response pair) successfully validated.
   * @member {number} [successRate] The percent of successful operations
   * validated.
   * @member {number} [successRequests] The number of requests validated
   * successfully.
   * @member {number} [successResponses] The number of responses validated
   * successfully.
   * @member {string} [validationEndtime] The datetime when the validation
   * completed.
   */
  constructor() {
  }

  /**
   * Defines the metadata of OperationValidationResult
   *
   * @returns {object} metadata of OperationValidationResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'OperationValidationResult',
      type: {
        name: 'Composite',
        className: 'OperationValidationResult',
        modelProperties: {
          validationId: {
            required: false,
            readOnly: true,
            serializedName: 'validationId',
            type: {
              name: 'String'
            }
          },
          operationId: {
            required: false,
            readOnly: true,
            serializedName: 'operationId',
            type: {
              name: 'String'
            }
          },
          resourceProvider: {
            required: false,
            readOnly: true,
            serializedName: 'resourceProvider',
            type: {
              name: 'String'
            }
          },
          apiVersion: {
            required: false,
            readOnly: true,
            serializedName: 'apiVersion',
            type: {
              name: 'String'
            }
          },
          modelSourceRepo: {
            required: false,
            readOnly: true,
            serializedName: 'modelSourceRepo',
            type: {
              name: 'String'
            }
          },
          modelSourceBranch: {
            required: false,
            readOnly: true,
            serializedName: 'modelSourceBranch',
            type: {
              name: 'String'
            }
          },
          operations: {
            required: false,
            readOnly: true,
            serializedName: 'operations',
            type: {
              name: 'Number'
            }
          },
          successOperations: {
            required: false,
            readOnly: true,
            serializedName: 'successOperations',
            type: {
              name: 'Number'
            }
          },
          successRate: {
            required: false,
            readOnly: true,
            serializedName: 'successRate',
            type: {
              name: 'Number'
            }
          },
          successRequests: {
            required: false,
            readOnly: true,
            serializedName: 'successRequests',
            type: {
              name: 'Number'
            }
          },
          successResponses: {
            required: false,
            readOnly: true,
            serializedName: 'successResponses',
            type: {
              name: 'Number'
            }
          },
          validationEndtime: {
            required: false,
            readOnly: true,
            serializedName: 'validationEndtime',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = OperationValidationResult;
